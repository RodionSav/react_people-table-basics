{"version":3,"sources":["components/HomePage.tsx","App.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleLink.tsx","components/PeoplePage.tsx","components/Root.tsx","index.tsx"],"names":["HomePage","className","getLinkClass","isActive","classNames","App","role","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleLink","person","slug","sex","name","PeoplePage","useParams","useState","people","setPeople","loader","setLoader","error","setError","arePeople","setArePeople","useEffect","length","catch","finally","getPersonByName","find","map","father","fatherName","mother","motherName","cn","born","died","Root","element","path","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f1396cd7.chunk.js","sourcesContent":["export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames(\n  'navbar-item', { 'has-background-grey-lighter': isActive },\n);\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={getLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <div className=\"block\">\n          <Outlet />\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  return (\n    <>\n      <NavLink\n        to={`${person.slug}`}\n        className={classNames({ 'has-text-danger': person.sex === 'f' })}\n      >\n        {person.name}\n      </NavLink>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleLink } from './PeopleLink';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loader, setLoader] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [arePeople, setArePeople] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoader(true);\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n\n        if (response.length === 0) {\n          setArePeople(true);\n        }\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoader(false));\n  }, []);\n\n  const getPersonByName = (name: string) => {\n    return people.find((person) => person.name === name);\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"box table-container\">\n        {loader && <Loader />}\n\n        {error && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {arePeople && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {!error && !loader && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map((person) => {\n                const father = person.fatherName\n                  ? getPersonByName(person.fatherName) : null;\n\n                const mother = person.motherName\n                  ? getPersonByName(person.motherName) : null;\n\n                return (\n                  <tr\n                    key={person.slug}\n                    data-cy=\"person\"\n                    className={cn(\n                      { 'has-background-warning': person.slug === slug },\n                    )}\n                  >\n                    <td>\n                      <PeopleLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {(mother\n                        ? <PeopleLink person={mother} /> : person.motherName)\n                        || '-'}\n                    </td>\n                    <td>\n                      {(father\n                        ? <PeopleLink person={father} /> : person.fatherName)\n                        || '-'}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport { HomePage } from './HomePage';\nimport { App } from '../App';\nimport { PeoplePage } from './PeoplePage';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route element={<App />}>\n          <Route path=\"/\" index element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug?\" element={<PeoplePage />} />\n          </Route>\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './components/Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}